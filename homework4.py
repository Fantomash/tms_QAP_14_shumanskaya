print("Работа с переменными\n")

# Работа с переменными:
# 1. Переменной var_int присвойте значение 10, var_float - значение 8.4, var_str - "No"
var_int = 10
var_float = 8.4
var_str = "No"

# 2. Измените значение, хранимое в переменной var_int, увеличив его в 3.5 раза,
# результат свяжите с переменной big_int.
var_int *= 3.5
big_int = var_int

# 3. Измените значение, хранимое в переменной var_float, уменьшив его на единицу,
# результат свяжите с той же переменной.
var_float -= 1


# 4. Разделите var_int на var_float, а затем big_int на var_float. Результат данных
# выражений не привязывайте ни к каким переменным.
var_int/var_float
big_int/var_float

# 5. Измените значение переменной var_str на "NoNoYesYesYes". При формировании
# нового значения используйте операции конкатенации (+) и повторения строки (*).
yes_str = "Yes"
var_str = var_str*2 + yes_str*3

# 6. Выведите значения всех переменных.
print("var_int is", var_int)
print("big_int is", big_int)
print("var_float is", var_float)
print("var_str is", var_str)

print("\nСтроки\n")
# Строки:
# 1. Свяжите переменную с любой строкой, состоящей не менее чем из 8 символов.
# Извлеките из строки первый символ, затем последний, третий с начала и третий с
# конца. Измерьте длину вашей строки.
var_str = "To be, or not to be: that is the question."
print("Первый символ:", var_str[0])
print("Последний символ:", var_str[-1])
print("Третий символ с начала:", var_str[2])
print("Третий символ с конца:", var_str[-3])
print("Длина строки:", len(var_str))

# 2. Присвойте произвольную строку длиной 10-15 символов переменной и извлеките из
# нее следующие срезы:
# ● первые восемь символов
# ● четыре символа из центра строки
# ● символы с индексами кратными трем
# ● переверните строку
var_str = "To be, or not to be: that is the question."
center = len(var_str)//2
print("первые восемь символов:", var_str[0:8])
print("четыре символа из центра строки: '" + str(var_str[center-2:center+2]) + "'")
print("символы с индексами кратными трем:", var_str[3::3])
print("переверните строку:", var_str[::-1])

# 3. Есть строка: “my name is name”. Напечатайте ее, но вместо 2ого “name” вставьте
# ваше имя.
name = "Maria"
print(f"my name is {name}")

# 4. Есть строка: test_tring = "Hello world!", необходимо
# ● напечатать на каком месте находится буква w
# ● кол-во букв l
# ● Проверить начинается ли строка с подстроки: “Hello”
# ● Проверить заканчивается ли строка подстрокой: “qwe”
test_tring = "Hello world!"
print("на каком месте находится буква w:", test_tring.find('w'))
print("кол-во букв l:", test_tring.count('l'))
print("Проверить начинается ли строка с подстроки: “Hello”:", test_tring.startswith('Hello'))
print("Проверить заканчивается ли строка подстрокой: “qwe”:", test_tring.endswith('qwe'))

print("\nСписки\n")
# Списки:
# 1. Создайте два любых списка и свяжите их с переменными
lst_str = ['один', 'два', 'три', 'четыре']
lst_num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]

# 2. Извлеките из первого списка второй элемент.
print("Извлеките из первого списка второй элемент:", lst_str[1])

# 3. Измените во втором списке последний элемент. Выведите список на экран.
lst_num[-1] = 10
print("Измените во втором списке последний элемент:", lst_num)

# 4. Соедините оба списка в один, присвоив результат новой переменной. Выведите
# получившийся список на экран.
new_lst = lst_str + lst_num
print("Соедините оба списка в один:", new_lst)

# 5. "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части
# обоих первых списков. Срез свяжите с очередной новой переменной. Выведите
# значение этой переменной.
part_lst = new_lst[2:-2]
print("Снимите срез из соединенного списка: ", part_lst)

# 6. Добавьте в список два новых элемента и снова выведите его.
new_lst.append('пять')
new_lst.append(11)
print(new_lst)

# 7. Даны списки:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].
# Нужно вернуть список, который состоит из элементов, общих для этих двух
# списков. -- !не использовать циклы
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
c_set = set(a) & set(b)
c_list = list(c_set)
print("Нужно вернуть список, который состоит из элементов, общих для этих двух списков:", c_list)

# 8. Есть список: [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3] оставить в нем только уникальные
# значения. !не использовать циклы
val_list = [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
set_unique = set(val_list)
val_list = list(set_unique)
print(val_list)

print("\nЛогические операции\n")
# Логические операции:
# 1. Присвойте двум переменным любые числовые значения
num_1 = 1
num_2 = 2.0

# 2. Составьте четыре сложных логических выражения с помощью оператора and, два из
# которых должны давать истину, а два других - ложь.
true_expression_1 = num_1 < num_2 and num_2 > 0
true_expression_2 = num_1*2 == num_2 and num_1 != 0
false_expression_1 = num_1/num_2 > 1 and num_1/num_2 < 1
false_expression_2 = num_1+num_2 > num_2+num_1 and num_1*num_2 <= num_2*num_1

# 3. Аналогично выполните п. 2, но уже используя оператор or
true_expression_3 = num_1 < num_2 or num_2 < 0
true_expression_4 = num_1*2 == num_2 or num_1 == 0
false_expression_3 = num_1/num_2 > 1 or num_2/num_1 < 1
false_expression_4 = num_1+num_2 > num_2+num_1 or num_1*num_2 < num_2*num_1

# 4. Попробуйте использовать в сложных логических выражениях работу с переменными
# строкового типа.
apple = "red apple"
true_expression_5 = "apple" == "яблоко" or "red apple" == apple
false_expression_5 = "apple" == "яблоко" and "red apple" == apple

print("\nСловари\n")
# Словари:
# 1. Создайте словарь, связав его с переменной school, и наполните его данными,
# которые бы отражали количество учащихся в десяти разных классах (например, 1а, 1б,
# 2б, 6а, 7в и т.д.).
school = {"1A": 10, "2B": 12, "3C": 45, "4D": 15, "5E": 13, "6A": 22, "7B": 16, "8C": 20, "9D": 31, "10E": 5}

# 2. Узнайте сколько человек в каком-нибудь классе.
count_pupils = school["3C"]

# 3. Представьте, что в школе произошли изменения, внесите их в словарь:
# ◦ в трех классах изменилось количество учащихся;
school["3C"] = 10
school["6A"] = 23
school["10E"] = 7
# ◦ в школе появилось два новых класса;
school["11A"] = 22
# ◦ в школе расформировали один из классов.
del school["3C"]

# 4. Выведите содержимое словаря на экран.
print(school)

print("\nПреобразование типов\n")
# Преобразование типов
# 1. Перевести строку в массив
# "Robin Singh" => ["Robin”, “Singh"]
# "I love arrays they are my favorite" => ["I", "love", "arrays", "they", "are", "my", "favorite"]
str_1 = "Robin Singh"
str_2 = "I love arrays they are my favorite"
list_1 = str_1.split()
list_2 = str_2.split()

# 2. Дан список: [‘Ivan’, ‘Ivanou’], и 2 строки: Minsk, Belarus
# Напечатайте текст: “Привет, Ivan Ivanou! Добро пожаловать в Minsk Belarus”
list_names = ["Ivan", "Ivanou"]
str_3 = "Minsk"
str_4 = "Belarus"
print(f"Привет, {list_names[0]} {list_names[1]}! Добро пожаловать в {str_3} {str_4}")

# 3. Дан список ["I", "love", "arrays", "they", "are", "my", "favorite"] сделайте из него
# строку => "I love arrays they are my favorite"
list_3 = ["I", "love", "arrays", "they", "are", "my", "favorite"]
str_5 = ' '.join(list_3)

# 4. Создайте список из 10 элементов, вставьте на 3-ю позицию новое значение,
# удалите элемент из списка под индексом 6
list_4 = [1, 4.34, "sdf", True, 5, True, 0.00, [], 9, "Hi!"]
list_4.insert(2, "вставьте на 3-ю позицию новое значение")
list_4.pop(6)

# 5.Есть 2 словаря
# a = { 'a': 1, 'b': 2, 'c': 3}
# b = { 'c': 3, 'd': 4,'e': 5}
# Необходимо их объединить по ключам, а значения ключей поместить в список, если у
# одного словаря есть ключ "а", а у другого нету, то поставить значение None на
# соответствующую позицию(1-я позиция для 1-ого словаря, вторая для 2-ого)
# ab = {'a': [1, None], 'b': [2, None], 'c': [3, 3], 'd': [None, 4], 'e': [None, 5]}
a = {'a': 1, 'b': 2, 'c': 3}
b = {'c': 3, 'd': 4,'e': 5}
ab = {}
keys = set()
keys.update(a.keys())
keys.update(b.keys())
for k in keys:
    key_a = a.get(k)
    key_b = b.get(k)
    ab[k] = [key_a, key_b]
print(ab)

print("\nУсловия\n")
# Условия
# 1. Дано целое число. Если оно является положительным, то прибавить к нему 1; в
# противном случае не изменять его. Вывести полученное число.
a = int(input("Введите целое число: "))
if a > 0:
    a += 1
else:
    a = a
print(a)

# 2. Даны три целых числа. Найти количество положительных чисел в исходном наборе
a = int(input("Введите число 1: "))
b = int(input("Введите число 2: "))
c = int(input("Введите число 3: "))
abc = [a, b, c]
positive_count = 0
for i in abc:
    if i > 0:
        positive_count += 1
print("Количество положительных чисел в исходном наборе:", positive_count)

# 3. Дан номер года (положительное целое число). Определить количество дней в
# этом году, учитывая, что обычный год насчитывает 365 дней, а високосный — 366
# дней. Високосным считается год, делящийся на 4, за исключением тех годов, которые
# делятся на 100 и не делятся на 400 (например, годы 300, 1300 и 1900 не являются
# високосными, а 1200 и 2000 являются).
year = int(input("Введите год: "))
days = 0
if year%4 == 0 and (year%100 == 0 and year%400 == 0):
    days = 366
else:
    days = 365
print("Количество дней в этом году:", days)

# 4. Дано целое число в диапазоне 1–7. Вывести строку — название дня недели,
# соответствующее данному числу (1 — «понедельник», 2 — «втор- ник» и т. д.).
week = ["понедельник", "вторник", "среда", "четверг", "пятница", "суббота", "воскресенье"]
i = int(input("Введите номер дня недели: "))
print(week[i-1])

# 5. Единицы массы пронумерованы следующим образом: 1 — килограмм, 2 —
# миллиграмм, 3 — грамм, 4 — тонна, 5 — центнер. Дан номер единицы массы (целое
# число в диапазоне 1–5) и масса тела в этих единицах (вещественное число). Найти
# массу тела в килограммах.
mass_unit = int(input("Введите номер единицы массы (1 — килограмм, 2 — миллиграмм, 3 — грамм, 4 — тонна, 5 — центнер): "))
mass_in = int(input("Введите массу тела: "))
if mass_unit == 1:
    print("Масса тела в килограммах:", mass_in)
elif mass_unit == 2:
    print("Масса тела в килограммах:", float(mass_in/1000000))
elif mass_unit == 3:
    print("Масса тела в килограммах:", float(mass_in/1000))
elif mass_unit == 4:
    print("Масса тела в килограммах:", mass_in*1000)
elif mass_unit == 5:
    print("Масса тела в килограммах:", mass_in*100)
else:
    print("Вы ввели некорректную единицу массы")

print("\nЦикл for\n")
# Цикл for
# 1. Даны два целых числа A и B (A < B). Найти сумму всех целых чисел от A до B
# включительно.
a_1 = 5
b_1 = 7
c_1 = 0
for i in range(a_1, b_1+1):
    c_1 = c_1+i
print(c_1)

# 2. Найти сумму всех натуральных чисел в от A до B
a_2 = int(input("Введите целое число А: "))
b_2 = int(input("Введите целое число В: "))
c_2 = 0
for i in range(a_2, b_2):
    c_2 = c_2+i
print(c_2)

# 3. Найти произведение положительных, сумму и количество отрицательных
# из 10 введенных целых значений.
values = []
i = 0
while i < 10:
    value = int(input(f"Введите значение {i + 1}: "))
    values.append(value)
    i += 1
product = 1
sum = 0
count = 0

for num in values:
    if num>1:
        product *= num
print("Произведение положительных чисел:", product)

for num in values:
    if num<0:
        sum += num
        count += 1
print("Сумма отрицательных чисел:", sum)
print("Количество отрицательных чисел:", count)

# 4. Дан словарь пловцов с их результатами. Напечатать лучший результат
# заплыва среди 6 участников.
# Бекиш Александр - 21,07
# Будник Алексей - 20,34
# Гребень Анастасия - 22,12
# Давидович Татьяна - 30
# Дешук Дмитрий - 24.01
# Казак Анна - 28,17
swim_dict = {"Бекиш Александр": 21.07, "Будник Алексей": 20.34, "Гребень Анастасия": 22.12, "Давидович Татьяна": 30, "Дешук Дмитрий": 24.01, "Казак Анна": 28.17}
min_value = list(swim_dict.values())[0]
for m in swim_dict.values():
    if m < min_value:
        min_value = m

for key, value in swim_dict.items():
    if value == min_value:
        print("Лучший результат:", key)

# 5. Есть массив чисел. Известно, что каждое число в этом массиве имеет пару,
# кроме одного: [1, 5, 2, 9, 2, 9, 1] => 5. Напишите программу, которая будет выводить
# уникальное число
numbers_list = [1, 5, 2, 9, 2, 9, 1]
unique_number = []
for num in numbers_list:
    if num in unique_number:
        continue
    else:
        unique_number.append(num)
print("Уникальные числа:", unique_number)

print("\nЦикл while\n")
# Цикл while
# 1. Дано число N. Найти произведение всех чисел от 0 до N.
n = 10
i = 0
product = 1
while i <=n:
    product = product*i
    i+=1
print("Произведение всех чисел от 0 до N (из-за условия всегда будет равняться нулю):", product)

# 2. Поле засеяли цветами двух сортов на площади S1 и S2. Каждый год
# площадь цветов первого сорта увеличивается вдвое, а площадь второго сорта
# увеличивается втрое. Через сколько лет площадь первых сортов будет
# составлять меньше 10% от площади вторых сортов.
s_1 = 50
s_2 = 70
years_count = 0
while s_1 > s_2*0.1:
    s_1 *= 2
    s_2 *= 3
    years_count += 1
    print(s_1, s_2, years_count)
print(f"Площадь первых сортов будет составлять меньше 10% от площади вторых сортов через {years_count} лет")

# 3. Дано целое число N (>0). Используя операции деления нацело и взятия
# остатка от деления, найти количество и сумму его цифр
n_int = int(input("Введите целое число N: "))
digits_count = 0
digits_sum = 0
while n_int > 0:
    digit = n_int % 10
    digits_count += 1
    digits_sum += digit
    n_int //= 10

print("Количество цифр:", digits_count)
print("Сумма цифр:", digits_sum)

# 4. Деду M лет, а внуку N лет. Через сколько лет дед станет вдвое старше
# внука. И сколько при этом лет будет деду и внуку.
ded = int(input("Введите количество лет деда: "))
vnuk = int(input("Введите количество лет внука: "))
ded_years = ded
vnuk_years = vnuk
years = 0
while vnuk * 2 < ded:
    years += 1
    ded += 1
    vnuk += 1
print(f"Деду {ded} лет, внуку {vnuk} лет")







